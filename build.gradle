import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id 'groovy'
  id 'java-gradle-plugin'
  id 'com.gradle.plugin-publish' version '0.10.0'
  id "net.researchgate.release" version "2.7.0"
}

group = 'de.schablinski.gradle.activejdbc'
description = """Gradle plugin for instrumenting ActiveJDBC model classes."""

def activeJdbcVersion = '2.2'

repositories {

  mavenCentral()
  
}

ext {
  
}

dependencies {
  compile localGroovy()

  compile group: 'org.javalite', name: 'activejdbc-instrumentation', version: "${activeJdbcVersion}"

  // Debugging your plugin code with Gradle TestKit: set system property org.gradle.testkit.debug to true in the unit test's run configuration of your IDE
  testCompile gradleTestKit()

  testImplementation "junit:junit:4.12"
  testImplementation ("org.spockframework:spock-core:1.2-groovy-2.4") {
    exclude group: "org.codehaus.groovy", module: "groovy-all"
  }
  testCompile "org.apache.logging.log4j:log4j-api:2.11.1", "org.apache.logging.log4j:log4j-core:2.11.1"
}

task processVersionFile(type: WriteProperties) {
  outputFile file("$buildDir/resources/main/activejdbc-gradle-plugin.properties")

  property 'activejdbc-version', activeJdbcVersion
}
tasks.classes.dependsOn processVersionFile

processTestResources {
  filter ReplaceTokens, tokens: ["gradle-test-kit-dir" : new File(project.buildDir, "tmp").absolutePath.replace('\\', '/')]
}

task docJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from 'build/docs/groovydoc'
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


task createPluginClasspath {
  def outputDir = file("${buildDir}/resources/test")

  inputs.files sourceSets.test.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("${outputDir}/plugin-classpath.txt").text = sourceSets.test.runtimeClasspath.join('\n',)
  }
}

test.dependsOn << 'createPluginClasspath'

jar {
  manifest {
    attributes("Name": project.group + '.' + rootProject.name,
            "Implementation-Title": project.description,
            "Build-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "Implementation-Version":  project.version)
  }
}

gradlePlugin {
  plugins {
    activeJdbcPlugin {
      id = 'de.schablinski.activejdbc-gradle-plugin'
      displayName = 'ActiveJDBC instrumentation plugin'
      description = 'A plugin to instrument your project\'s model classes for the ActiveJDBC ORM framework.'
      implementationClass = 'de.schablinski.gradle.activejdbc.ActiveJDBCGradlePlugin'
    }
  }
}

pluginBundle {
  website = 'https://github.com/cschabl/activejdbc-gradle-plugin'
  vcsUrl = 'https://github.com/cschabl/activejdbc-gradle-plugin.git'
  tags = ['activejdbc']
}

assemble.dependsOn += [ 'sourceJar', 'docJar']


